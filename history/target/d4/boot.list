     1                                  ORG   0x7c00          ; 引导区加载位置
     2                                                        ; 与之相对的详细内存分区可参考 http://www.bioscentral.com/misc/bda.htm
     3                                  
     4                                  ;--------------------------------------- FAT12 格式描述 ------------------------------------------
     5                                  ; FAT12 引导扇区格式参见 http://blog.sina.com.cn/s/blog_3edcf6b80100cr08.html
     6 00000000 EB3C                    jmp entry
     7 00000002 90                      nop
     8                                  %include "fat12.asm"
     9                              <1> ; -----------------------------------------------------------------------------------------------
    10                              <1> ; fat12.asm
    11                              <1> ; - 这个文件描述了一个标准FAT12的开头
    12                              <1> ; - 需要注意的是，在引用本文件前，需要有额外的两行
    13                              <1> ; - jmp (short) entry   指定入口
    14                              <1> ; - nop                 null operation
    15                              <1> ; -----------------------------------------------------------------------------------------------
    16 00000003 414E4F5349504C20    <1> FAT12_OEMName      db    "ANOSIPL "      ; OEM字符串，8字节（通常为格式化本磁盘的操作系统名称及版本）
    17 0000000B 0002                <1> FAT12_BytesPerSec  dw    512             ; 每个扇区(sector)大小，必须为512(B)
    18 0000000D 01                  <1> FAT12_SecPerClus   db    1               ; 簇(cluster)的大小，必须为1（个扇区）
    19 0000000E 0100                <1> FAT12_RsvdSecCnt   dw    1               ; Boot记录所占用的扇区数
    20 00000010 02                  <1> FAT12_NumFATs      db    2               ; FAT的个数（必须为2）
    21 00000011 E000                <1> FAT12_RootEntCnt   dw    224             ; 根目录的文件数最大值（一般设成224项）
    22 00000013 400B                <1> FAT12_TotSec16     dw    2880            ; 该磁盘的大小,即逻辑扇区总数（必须设成2880扇区，即1440KB）
    23 00000015 F0                  <1> FAT12_Media        db    0xf0            ; 磁盘的种类/媒体描述符（必须为F0）
    24 00000016 0900                <1> FAT12_SecPerFAT    dw    9               ; 每个FAT的长度（必须是9扇区）
    25 00000018 1200                <1> FAT12_SecPerTrk    dw    18              ; 每个磁道的扇区数（必须是18）
    26 0000001A 0200                <1> FAT12_NumHeads     dw    2               ; 磁头数（必须是2）
    27 0000001C 00000000            <1> FAT12_HiddSec      dd    0               ; 隐藏扇区数
    28 00000020 400B0000            <1> FAT12_TolSec32     dd    2880            ; 如果BPB_TotSec16是0，则在这里记录扇区总数
    29 00000024 00                  <1> FAT12_DrvNum       db    0               ; 中断13的驱动器号
    30 00000025 00                  <1> FAT12_Reserved1    db    0               ; 保留字段
    31 00000026 29                  <1> FAT12_BootSig      db    29h             ; 扩展引导标记(29h)
    32 00000027 00000000            <1> FAT12_VolID        dd    0               ; 卷序列号
    33 0000002B 416E204F5320416C70- <1> FAT12_VolLbl       db    "An OS Alpha"   ; 卷标（11字节）
    34 00000034 6861                <1>
    35 00000036 4641543132202020    <1> FAT12_FilsSysType  db    "FAT12   "      ; 文件系统类型（8字节）
    36                              <1> 
    37                              <1> ; ------------------------------------------------------------------------------------------------
    38                              <1> ; 一些基于FAT12头的常量定义
    39                              <1> ; ------------------------------------------------------------------------------------------------
    40                              <1> 
    41                              <1> CFAT12_SecPerFAT         equ   9
    42                              <1> CFAT12_RootSectors       equ   14
    43                              <1> CFAT12_SecNoOfRoot       equ   19
    44                              <1> CFAT12_SecNoOfFAT1       equ   1
    45                              <1> CFAT12_DeltaSecNo        equ   17
    46                                  
    47                                  ; ----------------------------------------- 常量定义 ---------------------------------------------
    48                                  KernelBaseAddr   equ 0x0800
    49                                  KernelOffsetAddr equ 0x0000
    50                                  
    51                                  ;------------------------------------------ 程序主体 ---------------------------------------------
    52                                  ; BIOS中断表参见 http://www.cnblogs.com/walfud/articles/2980774.html
    53                                  entry:
    54 0000003E BA[5F00]                  mov dx, LoadStr
    55 00000041 E80600                    call dispstr                ; 显示提示信息
    56                                  
    57 00000044 EB00                      jmp fin
    58                                  
    59                                  fin:                          ; 程序结束
    60 00000046 F4                        hlt
    61 00000047 E9(00C4)                  jmp 0xc400                  ; 跳入app.sys
    62                                                                ; todo 为什么跳转地址是这个?
    63                                                                ; 原书所述地址是0xc200，然而实际上由于计算机顺序向后执行命令，因此只
    64                                                                ; 要在跳转地址和实际地址之间没有多余的jmp指令，就可以正常运行。但是
    65                                                                ; 若跳转地址大于实际地址则无法正常执行
    66                                  
    67                                  ; ---------------------------- 显示信息：公用代码 ------------------------------------------------
    68                                  ; dispstr函数：采用dx作为输入，在屏幕显示起始位置为dx的字符串
    69                                  dispstr:
    70 0000004A 89D6                      mov si, dx
    71                                  
    72                                  dispstr_loop:
    73 0000004C 2E8A04                    mov al, [cs:si]
    74 0000004F 3C00                      cmp al, 0
    75 00000051 740B                      je dispstr_end              ; 若AL = 0 则停止工作. 此处若改为JE entry则可无限向屏幕写入字符串
    76 00000053 B301                      mov bl, 01                  ; 选择前景色。不过不切换显示模式的话貌似无用
    77 00000055 B40E                      mov ah, 0x0e                ; 选择中断功能：显示字符并后移光标
    78 00000057 CD10                      int 0x10                    ; 调用显示中断
    79 00000059 83C601                    add si, 1
    80 0000005C EBEE                      jmp dispstr_loop
    81                                  
    82                                  dispstr_end:
    83 0000005E C3                        ret
    84                                  
    85                                  ; ---------------------------------------- 数据段 ------------------------------------------------
    86 0000005F 4C6F636174696E6720-     LoadStr db "Locating Kernel ", 0x00
    87 00000068 4B65726E656C2000   
    88                                  
    89 00000070 00<rept>                TIMES (0x01FE-($-$$)) db 0    ; 填充当前扇区。不知道为何原文给定的填充结束位置为0x7dfe
    90                                                                ; 不过这个填充位置显然是错的，因为这样55AA标志便远在引导扇区之外
    91                                                                ; 因此我们将填充位置改为 0x01FE，因为 0x01FE + 2 = 0x0200恰好为
    92                                                                ; 第一个扇区的长度
    93 000001FE 55AA                    DB    0x55, 0xaa
